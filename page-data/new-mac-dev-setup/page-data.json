{"componentChunkName":"component---src-templates-blog-post-js","path":"/new-mac-dev-setup/","result":{"data":{"site":{"siteMetadata":{"title":"My ideas' home"}},"markdownRemark":{"id":"097968f7-3342-5032-817c-966038978142","excerpt":"This guide helps to setup a new macbook and make it ready for software development. Make it yours : (Change the Laptop Name): I use the following command to…","html":"<p>This guide helps to setup a new macbook and make it ready for software development.</p>\n<h2>Make it yours : (Change the Laptop Name):</h2>\n<p>I use the following command to change the macbook name in case it’s promping a wrong username:</p>\n<p><code class=\"language-text\">sudo scutil --set HostName name-you-want</code></p>\n<h2>Developers Tools</h2>\n<h3>Xcode</h3>\n<p>The first step is to install developer tools on the new laptop wihout installing Xcode (it’s very large cannot afford to download it)</p>\n<ul>\n<li>Open the terminal</li>\n<li>type the following one and follow the prompt :</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">xcode-select --install</code></pre></div>\n<p>follow <a href=\"http://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/\">this link</a> for a precise step by step guide .</p>\n<h3>Terminal</h3>\n<p>The second step is to get rid of the default mac terminal  and install a powerfull and customizable terminal;\nmy choice is  a combinaison of zsh and <a href=\"https://www.iterm2.com/documentation.html\">iterm2</a>, for <a href=\"https://www.zsh.org/\">zsh</a> customization I use <a href=\"https://ohmyz.sh/\">oh-my-zsh</a></p>\n<p>let install it we need curl :</p>\n<ul>\n<li>For iterm2\n<code class=\"language-text\">brew cask install iterm2</code></li>\n<li>For Zsh  and zsh completions\n<code class=\"language-text\">brew install zsh zsh-completions</code></li>\n<li>\n<p>And oh my zsh c: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></pre></div>\n</li>\n</ul>\n<p>And now we can customize it as we need </p>\n<p>The default configuration can be edited and customized from the file .zshrc\nMore about the terminal configuration can be found <a href=\"https://dev.to/deepu105/configure-a-beautiful-terminal-on-unix-with-zsh-4mcb\">here</a>.</p>\n<ul>\n<li>For customization i prefer using dracula theme for both vscode and iterm, it like a universal theme</li>\n</ul>\n<h3>Package Manager Homebrew</h3>\n<p>Third step is to install package manager homebrew:\nAbout homebrew:</p>\n<p> <em>Homebrew  a free and open-source software package management system\nthat simplifies the installation of software on Apple’s macOS operating system</em></p>\n<p> I will need this software to install most of the software I’m going to work with.</p>\n<p> From <a href=\"https://brew.sh/\">their official site</a>  it’s said that :</p>\n<p>_<em>Homebrew installs the stuff you need that Apple didn’t.</em></p>\n<p>that is the reason why it’s not embedeed directly with ios like apt-get in linux or ubuntu os.</p>\n<p>let us install it.\nAs homebrew is written in ruby we will install it with this simple comand:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></pre></div>\n<p>Once homebrew is installed we can install everything according to your needs.</p>\n<h2>Useful Softwares</h2>\n<p>I run the following comand to install the first set of softwares I need to work on my new laptop:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> brew cask install slack zoomus google-chrome visual-studio-code spotify google-backup-and-sync</code></pre></div>\n<p>They are the most important software I use :</p>\n<ul>\n<li>slack is my office</li>\n<li>zoom is my phone</li>\n<li>google chrome and  vscode are my axes </li>\n<li>and Spotify\nThey are the most important software for me , everything else can be installed from google chrome</li>\n</ul>\n<h2>Programing Softwares</h2>\n<h3>Python</h3>\n<p>For me as,  I’m a pyhton developer I will install everything related to python :</p>\n<ul>\n<li>let install python3 and python 2</li>\n<li>python 2 I  use <code class=\"language-text\">brew install python@2</code></li>\n<li>python 3 I’m a big fan of python 3.6.5 because for now it’s the only version supported by tensorflow.</li>\n</ul>\n<p><code class=\"language-text\">brew install --ignore-dependencies https://raw.githubusercontent.com/Homebrew/homebrew-core/f2a764ef944b1080be64bd88dca9a1d80130c558/Formula/python.rb</code></p>\n<h4>JavaScript</h4>\n<p>Node the latest version <code class=\"language-text\">brew install node</code></p>\n<h3>Synchronize .zshrc file</h3>\n<p>To avoid rewriting the settings each time , I setup a new macbook, let me keep them synchronize to google drive.</p>\n<ul>\n<li>I made sure I have Google drive sync installed in my laptop</li>\n<li>Check if a folder Called Google Drive is in The home directory</li>\n<li>Create a folder for configuration with : <code class=\"language-text\">mkdir -p ~/Google\\ Drive/ohmyzsh-conf</code></li>\n<li>Make a copy for the existing file in case : <code class=\"language-text\">cp ~/.zshrc ~/.zshrc.copy</code></li>\n<li>Move the original file to the google drive folder : <code class=\"language-text\">mv .zshrc ~/Google\\ Drive/ohmyzsh-conf/.zshrc</code></li>\n<li>Make a symbolic link from that file with the original configuration : <code class=\"language-text\">ln -s ~/Google\\ Drive/ohmyzsh-conf/.zshrc .zshrc</code></li>\n</ul>","frontmatter":{"title":"Setup a new Macbook for software development","date":"08 March, 2020","description":"how I setup my macbook for development"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/new-mac-dev-setup/","previous":{"fields":{"slug":"/read-emails-python/"},"frontmatter":{"title":"Reading Emails from a Mailbox with python"}},"next":{"fields":{"slug":"/remote-work-africa-french/"},"frontmatter":{"title":"Quelques meilleurs conseils pour un travail efficace à distance, une réalité africaine"}}}}}