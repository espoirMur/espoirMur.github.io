{"version":3,"sources":["webpack:///./src/components/comments.js","webpack:///./src/components/blogIndex.js"],"names":["Comments","props","commentBox","React","createRef","componentDidMount","scriptEl","document","createElement","setAttribute","this","current","appendChild","render","className","ref","Component","BlogIndex","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"iLA+BeA,E,oBA5Bb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,WAAaC,IAAMC,YAFP,E,kHAInBC,kBAAA,WACE,IACIC,EAAWC,SAASC,cAAc,UACtCF,EAASG,aAAa,MAAO,iCAC7BH,EAASG,aAAa,cAAe,aACrCH,EAASG,aAAa,SAAS,GAC/BH,EAASG,aAAa,OAAQ,iCAC9BH,EAASG,aAAa,aAAc,YACpCH,EAASG,aAAa,QAPC,eAQvBC,KAAKR,WAAWS,QAAQC,YAAYN,I,EAGtCO,OAAA,WACE,OACE,yBAAKC,UAAU,sCACb,wBAAIA,UAAU,QAAd,YACA,wBAAIA,UAAU,SACd,yBAAKC,IAAKL,KAAKR,WAAYY,UAAU,kB,GAtBtBE,a,8CCKjBC,E,gLACJJ,OAAA,WAAU,IACAK,EAASR,KAAKT,MAAdiB,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUhB,KAAKT,MAAMyB,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CACEF,MAAO,CACLG,UAAU,QAEZC,GAAIT,EAAKE,OAAOC,MAEf,IACAT,EAAO,KACF,KACJ,IACN,mCAASM,EAAKC,YAAYS,KAA1B,KAAyC,KACjC,IACV,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,WAE9C,KACM,IACX,kBAAC,EAAD,UAGF,M,GAzCY1B,aAiDX2B,GAFE1B,YAEO","file":"component---src-components-blog-index-js-e1ff01400c0c7d161c0c.js","sourcesContent":["import React, { Component } from \"react\"\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props)\n    this.commentBox = React.createRef() // Creates a reference to inject the <script> element\n  }\n  componentDidMount() {\n    const utteranceTheme = \"github-dark\"\n    let scriptEl = document.createElement(\"script\")\n    scriptEl.setAttribute(\"src\", \"https://utteranc.es/client.js\")\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\")\n    scriptEl.setAttribute(\"async\", true)\n    scriptEl.setAttribute(\"repo\", \"espoirMur/espoirMur.github.io\")\n    scriptEl.setAttribute(\"issue-term\", \"pathname\")\n    scriptEl.setAttribute(\"theme\", utteranceTheme)\n    this.commentBox.current.appendChild(scriptEl)\n  }\n\n  render() {\n    return (\n      <div className=\"comment-box-wrapper container pt-7\">\n        <h1 className=\"mb-0\">Comments</h1>\n        <hr className=\"my-0\" />\n        <div ref={this.commentBox} className=\"comment-box\" />\n        {/* Above element is where the comments are injected */}\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import React, { Component } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Comments from \"../components/comments\"\n\nclass BlogIndex extends Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link\n                    style={{\n                      boxShadow: `none`,\n                    }}\n                    to={node.fields.slug}\n                  >\n                    {\" \"}\n                    {title}{\" \"}\n                  </Link>{\" \"}\n                </h3>{\" \"}\n                <small> {node.frontmatter.date} </small>{\" \"}\n              </header>{\" \"}\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />{\" \"}\n              </section>{\" \"}\n              <Comments />\n            </article>\n          )\n        })}{\" \"}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}