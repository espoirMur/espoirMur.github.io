{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/allPosts.js"],"names":["Layout","render","header","this","props","location","title","children","pathname","style","scale","marginBottom","rhythm","marginTop","boxShadow","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","Component","AllPosts","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"oKAKMA,E,kGACJC,OAAA,WACE,IAEIC,EAFJ,EAAsCC,KAAKC,MAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,SA8CzB,OAzCEL,EAJY,MAGVG,EAASG,SAET,wBACEC,MAAK,iBACAC,YAAM,KADN,CAEHC,aAAcC,YAAO,KACrBC,UAAW,KAGb,kBAAC,OAAD,CACEJ,MAAO,CACLK,UAAU,OACVC,eAAe,OACfC,MAAM,WAERC,GAAE,SAEDX,IAML,wBACEG,MAAO,CACLS,WAAW,yBACXL,UAAW,IAGb,kBAAC,OAAD,CACEJ,MAAO,CACLK,UAAU,OACVC,eAAe,OACfC,MAAM,WAERC,GAAE,SAEDX,IAMP,yBACEG,MAAO,CACLU,WAAW,OACXC,YAAY,OACZC,SAAUT,YAAO,IACjBU,QAAYV,YAAO,KAAZ,IAAoBA,YAAO,EAAI,KAGxC,kBAAC,IAAD,MACA,gCAASV,GACT,8BAAOK,GACP,sCAAW,IAAIgB,MAAOC,cAAtB,yB,GA5DaC,aAkENzB,O,8HCjET0B,E,kGACJzB,OAAA,WACE,IAAQ0B,EAASxB,KAAKC,MAAduB,KACFC,EAAYD,EAAKE,KAAKC,aAAaxB,MACnCyB,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQ5B,SAAUF,KAAKC,MAAMC,SAAUC,MAAOsB,GAC5C,kBAAC,IAAD,CAAKtB,MAAM,cACVyB,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACN7B,EAAQ6B,EAAKC,YAAY9B,OAAS6B,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACE7B,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEH,MAAO,CACLK,UAAU,QAEZG,GAAIkB,EAAKE,OAAOC,MAEf,IACAhC,EAAO,KACF,KACJ,IACN,mCAAS6B,EAAKC,YAAYI,KAA1B,KAAyC,KACjC,IACV,iCACE,uBACEC,wBAAyB,CACvBC,OAAQP,EAAKC,YAAYO,aAAeR,EAAKS,WAE9C,KACM,QAGb,M,GAxCWnB,aA8CRC","file":"component---src-components-all-posts-js-96ec7570b85b78d71fdb.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\nimport NavBar from \"../components/navbar\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/blog`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/blog`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <NavBar></NavBar>\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>Â© {new Date().getFullYear()}, Build by Espy Mur</footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React, { Component } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass AllPosts extends Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link\n                    style={{\n                      boxShadow: `none`,\n                    }}\n                    to={node.fields.slug}\n                  >\n                    {\" \"}\n                    {title}{\" \"}\n                  </Link>{\" \"}\n                </h3>{\" \"}\n                <small> {node.frontmatter.date} </small>{\" \"}\n              </header>{\" \"}\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />{\" \"}\n              </section>{\" \"}\n            </article>\n          )\n        })}{\" \"}\n      </Layout>\n    )\n  }\n}\n\nexport default AllPosts\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}