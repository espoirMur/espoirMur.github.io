{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/comments.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","Comments","props","commentBox","React","createRef","componentDidMount","scriptEl","document","createElement","setAttribute","this","current","appendChild","render","className","ref","Component","BlogPostTemplate","post","markdownRemark","siteTitle","title","pageContext","previous","next","location","frontmatter","description","excerpt","marginTop","scale","date","featuredimage","fluid","src","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"oLA4DeA,EA/CH,WACV,IAAMC,EAAOC,yBAAe,cAiBpBC,EAAWF,EAAKG,KAAKC,aAArBF,OACR,OACE,yBACEG,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CACEC,MAAOT,EAAKU,OAAOC,gBAAgBF,MACnCG,IAAKV,EACLG,MAAO,CACLQ,YAAaL,YAAO,IACpBD,aAAc,EACdO,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAEd,IACH,yCACa,oCAAUb,EAAV,KADb,mE,wBCrBSe,E,YA5Bb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,WAAaC,IAAMC,YAFP,E,4CAInBC,kBAAA,WACE,IACIC,EAAWC,SAASC,cAAc,UACtCF,EAASG,aAAa,MAAO,iCAC7BH,EAASG,aAAa,cAAe,aACrCH,EAASG,aAAa,SAAS,GAC/BH,EAASG,aAAa,OAAQ,iCAC9BH,EAASG,aAAa,aAAc,YACpCH,EAASG,aAAa,QAPC,eAQvBC,KAAKR,WAAWS,QAAQC,YAAYN,I,EAGtCO,OAAA,WACE,OACE,yBAAKC,UAAU,sCACb,wBAAIA,UAAU,QAAd,YACA,wBAAIA,UAAU,SACd,yBAAKC,IAAKL,KAAKR,WAAYY,UAAU,kB,GAtBtBE,aCQjBC,E,kGACJJ,OAAA,WACE,IAAMK,EAAOR,KAAKT,MAAMlB,KAAKoC,eACvBC,EAAYV,KAAKT,MAAMlB,KAAKG,KAAKC,aAAakC,MACpD,EAA2BX,KAAKT,MAAMqB,YAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUf,KAAKT,MAAMwB,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAOH,EAAKQ,YAAYL,MACxBM,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UACjD,IACH,iCACE,gCACE,wBACExC,MAAO,CACLyC,UAAWtC,YAAO,GAClBD,aAAc,IAGf4B,EAAKQ,YAAYL,MAAO,KACrB,IACN,uBACEjC,MAAK,iBACA0C,aAAM,IADN,CAEHzC,QAAQ,QACRC,aAAcC,YAAO,MAGtB2B,EAAKQ,YAAYK,KAAM,KACrB,KACG,IACTb,EAAKQ,YAAYM,eAChB,kBAAC,IAAD,CACEC,MAAOf,EAAKQ,YAAYM,cAAcE,IAAIxC,gBAAgBuC,MAC1DtC,IAAKuB,EAAKQ,YAAYM,cAAcrC,MAGxC,6BACEwC,wBAAyB,CACvBC,OAAQlB,EAAKmB,QAEd,IACH,wBACEjD,MAAO,CACLE,aAAcC,YAAO,MAEtB,IACH,gCACE,kBAAC,EAAD,OACQ,KAEZ,6BACE,wBACEH,MAAO,CACLC,QAAQ,OACRiD,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG,IACAlB,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QACjC,IADH,IAEItB,EAASG,YAAYL,MAAO,KAE/B,KACC,IACN,4BACG,IACAG,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7B,IACArB,EAAKE,YAAYL,MAFpB,IAE4B,KAE3B,KACC,KACF,KACD,IACP,kBAAC,EAAD,Q,GAlFuBL,aAwFhBC","file":"component---src-templates-blog-post-js-6dfb45153e8355b2de45.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />{\" \"}\n      <p>\n        Written by <strong> {author} </strong> , a Software Engineer from DRC üá®üá©\n        lost in Data Science .ü§™\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React, { Component } from \"react\"\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props)\n    this.commentBox = React.createRef() // Creates a reference to inject the <script> element\n  }\n  componentDidMount() {\n    const utteranceTheme = \"github-dark\"\n    let scriptEl = document.createElement(\"script\")\n    scriptEl.setAttribute(\"src\", \"https://utteranc.es/client.js\")\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\")\n    scriptEl.setAttribute(\"async\", true)\n    scriptEl.setAttribute(\"repo\", \"espoirMur/espoirMur.github.io\")\n    scriptEl.setAttribute(\"issue-term\", \"pathname\")\n    scriptEl.setAttribute(\"theme\", utteranceTheme)\n    this.commentBox.current.appendChild(scriptEl)\n  }\n\n  render() {\n    return (\n      <div className=\"comment-box-wrapper container pt-7\">\n        <h1 className=\"mb-0\">Comments</h1>\n        <hr className=\"my-0\" />\n        <div ref={this.commentBox} className=\"comment-box\" />\n        {/* Above element is where the comments are injected */}\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import React, { Component } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport Comments from \"../components/comments\"\nimport Img from \"gatsby-image\"\n\nclass BlogPostTemplate extends Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />{\" \"}\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}{\" \"}\n            </h1>{\" \"}\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}{\" \"}\n            </p>{\" \"}\n          </header>{\" \"}\n          {post.frontmatter.featuredimage && (\n            <Img\n              fluid={post.frontmatter.featuredimage.src.childImageSharp.fluid}\n              alt={post.frontmatter.featuredimage.alt}\n            />\n          )}\n          <section\n            dangerouslySetInnerHTML={{\n              __html: post.html,\n            }}\n          />{\" \"}\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />{\" \"}\n          <footer>\n            <Bio />\n          </footer>{\" \"}\n        </article>\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {\" \"}\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  {\" \"}\n                  ‚Üê{previous.frontmatter.title}{\" \"}\n                </Link>\n              )}{\" \"}\n            </li>{\" \"}\n            <li>\n              {\" \"}\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {\" \"}\n                  {next.frontmatter.title}‚Üí{\" \"}\n                </Link>\n              )}{\" \"}\n            </li>{\" \"}\n          </ul>{\" \"}\n        </nav>{\" \"}\n        <Comments />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n        description\n        featuredimage {\n          src {\n            childImageSharp {\n              fluid(maxWidth: 1024) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          alt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}